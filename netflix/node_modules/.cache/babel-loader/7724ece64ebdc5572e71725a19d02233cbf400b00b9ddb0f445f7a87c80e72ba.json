{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athik\\\\OneDrive\\\\Desktop\\\\js\\\\netflix\\\\src\\\\components\\\\counter.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialstate = {\n  count: 0\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return {\n        count: state.count + 1\n      };\n    case 'decrement':\n      return {\n        count: state.count - 1\n      };\n    case reset:\n      return initialstate;\n    default:\n      return state;\n  }\n};\nfunction Counter() {\n  _s();\n  const [state, dispatch] = useReducer(state, i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count:\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count - 1),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"rKAj1yt8s/LSuomjreGVPMOIahQ=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useReducer","useState","jsxDEV","_jsxDEV","initialstate","count","reducer","state","action","type","reset","Counter","_s","dispatch","i","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setCount","_c","$RefreshReg$"],"sources":["C:/Users/athik/OneDrive/Desktop/js/netflix/src/components/counter.js"],"sourcesContent":["import React, { useReducer, useState } from 'react'\r\nconst initialstate={\r\n    count:0\r\n}\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n        case 'increment':\r\n            return {count:state.count+1}\r\n        \r\n        case 'decrement':\r\n            return {count:state.count-1}\r\n        case reset:\r\n            return initialstate\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\nfunction Counter() {\r\n    const[state,dispatch]=useReducer(state,i)\r\n    \r\n  return (\r\n    <div>\r\n      <h1>Count:{count}</h1>\r\n      <button onClick={()=>setCount(count+1)}>Increment</button>\r\n      <button onClick={()=>setCount(count-1)}>Decrement</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Counter\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC;AACV,CAAC;AACD,MAAMC,OAAO,GAACA,CAACC,KAAK,EAACC,MAAM,KAAG;EAC1B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,WAAW;MACZ,OAAO;QAACJ,KAAK,EAACE,KAAK,CAACF,KAAK,GAAC;MAAC,CAAC;IAEhC,KAAK,WAAW;MACZ,OAAO;QAACA,KAAK,EAACE,KAAK,CAACF,KAAK,GAAC;MAAC,CAAC;IAChC,KAAKK,KAAK;MACN,OAAON,YAAY;IACvB;MACI,OAAOG,KAAK;EAEpB;AACJ,CAAC;AACD,SAASI,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAK,CAACL,KAAK,EAACM,QAAQ,CAAC,GAACb,UAAU,CAACO,KAAK,EAACO,CAAC,CAAC;EAE3C,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,GAAI,QAAM,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAIC,QAAQ,CAAChB,KAAK,GAAC,CAAC,CAAE;MAAAU,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAIC,QAAQ,CAAChB,KAAK,GAAC,CAAC,CAAE;MAAAU,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAACP,EAAA,CAVQD,OAAO;AAAAW,EAAA,GAAPX,OAAO;AAYhB,eAAeA,OAAO;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}