{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athik\\\\OneDrive\\\\Desktop\\\\js\\\\netflix\\\\src\\\\components\\\\counter.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Counter() {\n  const initialstate = {\n    count: 0\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'increment':\n        return {\n          co\n        };\n      case 'decrement':\n        return {\n          count: state.count - 1\n        };\n      case reset:\n        return initialstate;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count:\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count - 1),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Counter","initialstate","count","reducer","state","action","type","co","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setCount","_c","$RefreshReg$"],"sources":["C:/Users/athik/OneDrive/Desktop/js/netflix/src/components/counter.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction Counter() {\r\n    const initialstate={\r\n        count:0\r\n    }\r\n    const reducer=(state,action)=>{\r\n        switch(action.type){\r\n            case 'increment':\r\n                return {co}\r\n            \r\n            case 'decrement':\r\n                return {count:state.count-1}\r\n            case reset:\r\n                return initialstate\r\n\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n      <h1>Count:{count}</h1>\r\n      <button onClick={()=>setCount(count+1)}>Increment</button>\r\n      <button onClick={()=>setCount(count-1)}>Decrement</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Counter\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,OAAOA,CAAA,EAAG;EACf,MAAMC,YAAY,GAAC;IACfC,KAAK,EAAC;EACV,CAAC;EACD,MAAMC,OAAO,GAACA,CAACC,KAAK,EAACC,MAAM,KAAG;IAC1B,QAAOA,MAAM,CAACC,IAAI;MACd,KAAK,WAAW;QACZ,OAAO;UAACC;QAAE,CAAC;MAEf,KAAK,WAAW;QACZ,OAAO;UAACL,KAAK,EAACE,KAAK,CAACF,KAAK,GAAC;QAAC,CAAC;MAChC,KAAKM,KAAK;QACN,OAAOP,YAAY;IAE3B;EACJ,CAAC;EACH,oBACEF,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAI,QAAM,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBd,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAIC,QAAQ,CAACb,KAAK,GAAC,CAAC,CAAE;MAAAO,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1Dd,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAIC,QAAQ,CAACb,KAAK,GAAC,CAAC,CAAE;MAAAO,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAACG,EAAA,GAvBQhB,OAAO;AAyBhB,eAAeA,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}